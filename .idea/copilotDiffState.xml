<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.hilt.android)&#10;    id(&quot;kotlin-kapt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.commerin.telemetri&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.commerin.telemetri&quot;&#10;        minSdk = 21&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;&#10;    // Hilt dependencies - matching version with library module&#10;    implementation(&quot;com.google.dagger:hilt-android:2.48&quot;)&#10;    kapt(&quot;com.google.dagger:hilt-android-compiler:2.48&quot;)&#10;&#10;    // Project dependencies&#10;    implementation(project(&quot;:telemetri-sdk&quot;))&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.hilt.android)&#10;    id(&quot;kotlin-kapt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.commerin.telemetri&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.commerin.telemetri&quot;&#10;        minSdk = 21&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;&#10;    // Hilt dependencies - matching version with library module&#10;    implementation(&quot;com.google.dagger:hilt-android:2.48&quot;)&#10;    kapt(&quot;com.google.dagger:hilt-android-compiler:2.48&quot;)&#10;&#10;    // Project dependencies&#10;    implementation(project(&quot;:telemetri-sdk&quot;))&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/telemetri-sdk/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/telemetri-sdk/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.library)&#10;    alias(libs.plugins.kotlin.android)&#10;    id(&quot;com.google.dagger.hilt.android&quot;) version &quot;2.48&quot;&#10;    id(&quot;kotlin-kapt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.commerin.telemetri.sdk&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        minSdk = 21&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;        consumerProguardFiles(&quot;consumer-rules.pro&quot;)&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Core Android&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;&#10;    // Lifecycle and Architecture Components&#10;    implementation(&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.7.0&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-process:2.7.0&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-common-java8:2.7.0&quot;)&#10;&#10;    // Coroutines&#10;    implementation(&quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3&quot;)&#10;    implementation(&quot;org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3&quot;)&#10;&#10;    // WorkManager&#10;    implementation(&quot;androidx.work:work-runtime-ktx:2.9.0&quot;)&#10;&#10;    // Room Database&#10;    implementation(&quot;androidx.room:room-runtime:2.6.1&quot;)&#10;    implementation(&quot;androidx.room:room-ktx:2.6.1&quot;)&#10;    kapt(&quot;androidx.room:room-compiler:2.6.1&quot;)&#10;&#10;    // Location Services&#10;    implementation(libs.play.services.location)&#10;&#10;    // Dependency Injection (Hilt)&#10;    implementation(&quot;com.google.dagger:hilt-android:2.48&quot;)&#10;    kapt(&quot;com.google.dagger:hilt-android-compiler:2.48&quot;)&#10;    implementation(&quot;androidx.hilt:hilt-work:1.0.0&quot;)&#10;    kapt(&quot;androidx.hilt:hilt-compiler:1.0.0&quot;)&#10;&#10;    // JSON Processing&#10;    implementation(&quot;com.google.code.gson:gson:2.10.1&quot;)&#10;&#10;    // Network (for future API integration)&#10;    implementation(&quot;com.squareup.retrofit2:retrofit:2.9.0&quot;)&#10;    implementation(&quot;com.squareup.retrofit2:converter-gson:2.9.0&quot;)&#10;    implementation(&quot;com.squareup.okhttp3:logging-interceptor:4.12.0&quot;)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.library)&#10;    alias(libs.plugins.kotlin.android)&#10;    id(&quot;com.google.dagger.hilt.android&quot;) version &quot;2.48&quot;&#10;    id(&quot;kotlin-kapt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.commerin.telemetri.sdk&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        minSdk = 21&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;        consumerProguardFiles(&quot;consumer-rules.pro&quot;)&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Core Android&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;&#10;    // Lifecycle and Architecture Components&#10;    implementation(&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.7.0&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-process:2.7.0&quot;)&#10;    implementation(&quot;androidx.lifecycle:lifecycle-common-java8:2.7.0&quot;)&#10;&#10;    // Coroutines&#10;    implementation(&quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3&quot;)&#10;    implementation(&quot;org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3&quot;)&#10;&#10;    // WorkManager&#10;    implementation(&quot;androidx.work:work-runtime-ktx:2.9.0&quot;)&#10;&#10;    // Room Database&#10;    implementation(&quot;androidx.room:room-runtime:2.6.1&quot;)&#10;    implementation(&quot;androidx.room:room-ktx:2.6.1&quot;)&#10;    kapt(&quot;androidx.room:room-compiler:2.6.1&quot;)&#10;&#10;    // Location Services&#10;    implementation(libs.play.services.location)&#10;&#10;    // Dependency Injection (Hilt)&#10;    implementation(&quot;com.google.dagger:hilt-android:2.48&quot;)&#10;    kapt(&quot;com.google.dagger:hilt-android-compiler:2.48&quot;)&#10;    implementation(&quot;androidx.hilt:hilt-work:1.0.0&quot;)&#10;    kapt(&quot;androidx.hilt:hilt-compiler:1.0.0&quot;)&#10;&#10;    // JSON Processing&#10;    implementation(&quot;com.google.code.gson:gson:2.10.1&quot;)&#10;&#10;    // Network (for future API integration)&#10;    implementation(&quot;com.squareup.retrofit2:retrofit:2.9.0&quot;)&#10;    implementation(&quot;com.squareup.retrofit2:converter-gson:2.9.0&quot;)&#10;    implementation(&quot;com.squareup.okhttp3:logging-interceptor:4.12.0&quot;)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>